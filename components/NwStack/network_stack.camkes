/*
 *  OS Network Stack
 *
 *  Copyright (C) 2019, Hensoldt Cyber GmbH
 *
 */

import <if_OS_nic.camkes>;
import "../../interfaces/timer_client.camkes";
import <if_OS_socket.camkes>;
import <if_OS_ConfigService.camkes>;


component NwStack_1 {

    control;

    emits       EventDataAvailable  e_tick_or_data;
    consumes    EventDataAvailable  c_tick_or_data; // event also from NIC and Timer

    emits       NwStack_WrEv        e_write;
    consumes    NwStack_WrEv        c_write;

    emits       NwStack_RdEv        e_read;
    consumes    NwStack_RdEv        c_read;

    emits       NwStack_ConnEv      e_conn;
    consumes    NwStack_ConnEv      c_conn;

    has         mutex               allocatorMutex;
    has         mutex               nwstackMutex;

    //-------------------------------------------------
    // interface Timer
    uses        timer_client_inf    Timer;


    //-------------------------------------------------
    // interface Ethernet NIC driver
    uses        if_OS_nic           nic_driver;
    dataport    Buf                 nic_port_from; // NIC -> stack
    dataport    Buf                 nic_port_to;   // stack -> NIC


    //---------------------------------------------------
    // Configuration server
    uses       if_OS_ConfigService  OS_ConfigServiceServer; // name hard-coded in config server client lib
    dataport   Buf                  cfg_dataport_buf;       // name hard-coded in config server client lib
    consumes   EventServiceReady    cfgServer_event_ready;


    //-------------------------------------------------
    // interface Application
    provides    if_OS_socket        network_stack_rpc; // name hard-coded in network client lib
    dataport    Buf                 nwStack_port;
    emits       EventServiceReady   nwStack_event_ready;

}


component NwStack_2 {

    control;

    emits      EventDataAvailable   e_tick_or_data;
    consumes   EventDataAvailable   c_tick_or_data; // event also from NIC and Timer

    emits      NwStack_WrEv         e_write;
    consumes   NwStack_WrEv         c_write;

    emits      NwStack_RdEv         e_read;
    consumes   NwStack_RdEv         c_read;

    emits      NwStack_ConnEv       e_conn;
    consumes   NwStack_ConnEv       c_conn;

    has        mutex                allocatorMutex;
    has        mutex                nwstackMutex;


    //-------------------------------------------------
    // interface Timer
    uses       timer_client_inf     Timer;


    //-------------------------------------------------
    // interface Ethernet NIC driver
    uses        if_OS_nic           nic_driver;
    dataport    Buf                 nic_port_from; // NIC -> stack
    dataport    Buf                 nic_port_to;   // stack -> NIC


    //---------------------------------------------------
    // Configuration server
    uses       if_OS_ConfigService  OS_ConfigServiceServer; // name hard-coded in config server client lib
    dataport   Buf                  cfg_dataport_buf;       // name hard-coded in config server client lib
    consumes   EventServiceReady    cfgServer_event_ready;


    //-------------------------------------------------
    // interface Application
    provides   if_OS_socket         network_stack_rpc; // name hard-coded in network client lib
    dataport   Buf                  nwStack_port;
    emits      EventServiceReady    nwStack_event_ready;

}
