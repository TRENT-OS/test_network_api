/*
 * Network API Test System
 *
 * Copyright (C) 2020-2024, HENSOLDT Cyber GmbH
 * 
 * SPDX-License-Identifier: GPL-2.0-or-later
 *
 * For commercial licensing, contact: info.cyber@hensoldt.net
 */

#include "system_config.h"

#include "TimeServer/camkes/TimeServer.camkes"
TimeServer_COMPONENT_DEFINE(TimeServer)

#include "SysLogger/camkes/SysLogger.camkes"
SysLogger_COMPONENT_DEFINE_NO_SPOOLERS(SysLogger)

#include "../../components/TestAppTCPClient/TestAppTCPClient.camkes"

#include "NetworkStack_PicoTcp/camkes/NetworkStack_PicoTcp.camkes"
NetworkStack_PicoTcp_COMPONENT_DEFINE(
    NetworkStack_PicoTcp,
    NIC_DRIVER_RINGBUFFER_SIZE,
    SysLogger_CLIENT_DECLARE_CONNECTOR(sysLogger))

#include "plat_nic.camkes"
#include "lib_macros/List.h"

assembly {
    composition {

        //----------------------------------------------------------------------
        // SysLogger
        //----------------------------------------------------------------------
        component   SysLogger       sysLogger;

        SysLogger_INSTANCE_CONNECT_CLIENTS(
            sysLogger,
            nwStack,
            testAppTCPClient_client1,
            testAppTCPClient_client2
        )

        //----------------------------------------------------------------------
        // TimeServer
        //----------------------------------------------------------------------
        component TimeServer timeServer;


        TimeServer_INSTANCE_CONNECT_CLIENTS(
            timeServer,
            // connect platform specific components. The comma needs to be part
            // of the macro expansion
            NETWORK_TEST_OPTIONAL_TIMESERVER_CLIENTS_NETWORK_DRIVER(nwDriver)
            nwStack.timeServer_rpc, nwStack.timeServer_notify
        )

        //----------------------------------------------------------------------
        // NICs
        //----------------------------------------------------------------------
        NETWORK_TEST_NIC_INSTANCE(nwDriver)

        //----------------------------------------------------------------------
        // Network Stack
        //----------------------------------------------------------------------
        component NetworkStack_PicoTcp nwStack;

        NetworkStack_PicoTcp_INSTANCE_CONNECT(
            nwStack,
            nwDriver
        )

        //----------------------------------------------------------------------
        // TCP Client multiple clients - client 1
        //----------------------------------------------------------------------
        component TestAppTCPClient testAppTCPClient_client1;

        //----------------------------------------------------------------------
        // TCP Client multiple clients - client 2
        //----------------------------------------------------------------------
        component TestAppTCPClient testAppTCPClient_client2;

        // Clients sync
        connection seL4Notification testAppTCPClient_1_2_ready(
            from testAppTCPClient_client1.multiple_client_sync_send_ready,
            to   testAppTCPClient_client2.multiple_client_sync_recv_ready);

        connection seL4Notification testAppTCPClient_2_1_ready(
            from testAppTCPClient_client2.multiple_client_sync_send_ready,
            to   testAppTCPClient_client1.multiple_client_sync_recv_ready);


        connection seL4Notification testAppTCPClient_1_event_received(
            from testAppTCPClient_client1.event_received_send_ready,
            to   testAppTCPClient_client1.event_received_recv_ready);

        connection seL4Notification testAppTCPClient_2__event_received(
            from testAppTCPClient_client2.event_received_send_ready,
            to   testAppTCPClient_client2.event_received_recv_ready);

        // Connect clients to network stack
        NetworkStack_PicoTcp_INSTANCE_CONNECT_CLIENTS(
             nwStack,
             testAppTCPClient_client1, networkStack,
             testAppTCPClient_client2, networkStack
        )

     }

    configuration {
        TimeServer_CLIENT_ASSIGN_BADGES(
            // connect platform specific components. The comma needs to be part
            // of the macro expansion
            NETWORK_TEST_OPTIONAL_TIMESERVER_CLIENTS_NETWORK_DRIVER_BADGES(nwDriver)
            nwStack.timeServer_rpc
        )

        NetworkStack_PicoTcp_CLIENT_ASSIGN_BADGES(
            testAppTCPClient_client1, networkStack,
            testAppTCPClient_client2, networkStack
        )

        NetworkStack_PicoTcp_INSTANCE_CONFIGURE_CLIENTS(
            nwStack,
            8,
            8
        )

        NETWORK_TEST_NIC_CONFIG(nwDriver)
    }
}
